{"version":3,"sources":["../../src/hooks/useExternalContent.js"],"names":["useExternalContent","url","loadExternal","React","useState","content","setContent","useEffect","error","result","name","console","warn"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AAEe,SAASA,kBAAT,CAA4BC,GAA5B,EAAiCC,YAAjC,EAA+C;AAAA,wBAC5BC,eAAMC,QAAN,CAAe,EAAf,CAD4B;AAAA;AAAA,MACnDC,OADmD;AAAA,MAC1CC,UAD0C;;AAG1DH,iBAAMI,SAAN,CACI;AAAA,WACIL,YAAY,CAACD,GAAD,EAAM,UAACO,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAI,CAACD,KAAL,EAAY;AACRF,QAAAA,UAAU,CAACG,MAAD,CAAV;AACH,OAFD,MAEO,IAAID,KAAK,CAACE,IAAN,KAAe,YAAnB,EAAiC;AACpCC,QAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb,EAAsDX,GAAtD;AACH;AACJ,KANW,CADhB;AAAA,GADJ,EASI,CAACA,GAAD,CATJ;;AAYA,SAAOI,OAAP;AACH","sourcesContent":["import React from 'react';\n\nexport default function useExternalContent(url, loadExternal) {\n    const [content, setContent] = React.useState('');\n\n    React.useEffect(\n        () =>\n            loadExternal(url, (error, result) => {\n                if (!error) {\n                    setContent(result);\n                } else if (error.name !== 'AbortError') {\n                    console.warn('[codeblock] useExternalContent failed', url);\n                }\n            }),\n        [url]\n    );\n\n    return content;\n}\n"],"file":"useExternalContent.js"}