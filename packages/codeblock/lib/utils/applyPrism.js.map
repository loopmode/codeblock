{"version":3,"sources":["../../src/utils/applyPrism.js"],"names":["importPrism","applyPrism","element","options","language","theme","isContainer","async","callback","stillMounted","Prism","detected","lang","highlightAllUnder","highlightElement"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,SAChB;AAAO;AAA4C,WAAnD,CADgB;AAAA,CAApB;AAGA;;;;;SAI8BC,U;;;;;;;0BAAf,iBAA0BC,OAA1B,EAAmCC,OAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACX;AACQC,YAAAA,QAFG,GAE+CD,OAF/C,CAEHC,QAFG,EAEOC,KAFP,GAE+CF,OAF/C,CAEOE,KAFP,EAEcC,WAFd,GAE+CH,OAF/C,CAEcG,WAFd,EAE2BC,KAF3B,GAE+CJ,OAF/C,CAE2BI,KAF3B,EAEkCC,QAFlC,GAE+CL,OAF/C,CAEkCK,QAFlC;;AAILC,YAAAA,YAJK,GAIU,SAAfA,YAAe;AAAA,qBAAM,CAAC,CAACP,OAAR;AAAA,aAJV;;AAAA;AAAA,mBAKSF,WAAW,EALpB;;AAAA;AAKLU,YAAAA,KALK;;AAAA,kBAOPJ,WAAW,IAAIG,YAAY,EAPpB;AAAA;AAAA;AAAA;;AASDE,YAAAA,QATC,GASU,2BAAaT,OAAb,CATV;AAAA;AAAA;AAAA;AAAA;AAAA,wBAUMS,QAVN;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUFC,YAAAA,IAVE;;AAAA,kBAWCA,IAAI,IAAIH,YAAY,EAXrB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYO,yBAAW,UAAX,EAAuBG,IAAvB,CAZP;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAeAR,QAAQ,IAAIK,YAAY,EAfxB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBD,yBAAW,UAAX,EAAuBL,QAAvB,CAhBC;;AAAA;AAAA,kBAmBPC,KAAK,IAAII,YAAY,EAnBd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBD,yBAAW,OAAX,EAAoBJ,KAApB,CApBC;;AAAA;AAuBX,gBAAII,YAAY,EAAhB,EAAoB;AAChBH,cAAAA,WAAW,GACLI,KAAK,CAACG,iBAAN,CAAwBX,OAAxB,EAAiCK,KAAjC,EAAwCC,QAAxC,CADK,GAELE,KAAK,CAACI,gBAAN,CAAuBZ,OAAvB,EAAgCK,KAAhC,EAAuCC,QAAvC,CAFN;AAGH;;AA3BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import loadModule from './loadModule';\nimport getLanguages from './getLanguages';\n\nconst importPrism = () =>\n    import(/* webpackChunkName: 'codeblock/prismjs' */ 'prismjs');\n\n/**\n * Async function that loads and applies prism. See `hooks/usePrism`.\n */\n\nexport default async function applyPrism(element, options) {\n    //\n    const { language, theme, isContainer, async, callback } = options;\n\n    const stillMounted = () => !!element;\n    const Prism = await importPrism();\n\n    if (isContainer && stillMounted()) {\n        let lang;\n        const detected = getLanguages(element);\n        for (lang of detected) {\n            if (lang && stillMounted()) {\n                await loadModule('language', lang);\n            }\n        }\n    } else if (language && stillMounted()) {\n        await loadModule('language', language);\n    }\n\n    if (theme && stillMounted()) {\n        await loadModule('theme', theme);\n    }\n\n    if (stillMounted()) {\n        isContainer\n            ? Prism.highlightAllUnder(element, async, callback)\n            : Prism.highlightElement(element, async, callback);\n    }\n}\n"],"file":"applyPrism.js"}