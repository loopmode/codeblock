{"version":3,"sources":["../../src/utils/applyPrism.js"],"names":["importPrism","applyPrism","element","options","language","theme","isContainer","async","callback","isMounted","Prism","console","debug","detectedLanguages","lang","highlightAllUnder","highlightElement"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,SAChB;AAAO;AAA4C,WAAnD,CADgB;AAAA,CAApB;AAGA;;;;;SAI8BC,U;;;;;;;0BAAf,iBAA0BC,OAA1B,EAAmCC,OAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACX;AACQC,YAAAA,QAFG,GAE+CD,OAF/C,CAEHC,QAFG,EAEOC,KAFP,GAE+CF,OAF/C,CAEOE,KAFP,EAEcC,WAFd,GAE+CH,OAF/C,CAEcG,WAFd,EAE2BC,KAF3B,GAE+CJ,OAF/C,CAE2BI,KAF3B,EAEkCC,QAFlC,GAE+CL,OAF/C,CAEkCK,QAFlC;;AAILC,YAAAA,SAJK,GAIO,SAAZA,SAAY;AAAA,qBAAM,CAAC,CAACP,OAAR;AAAA,aAJP;;AAAA;AAAA,mBAKSF,WAAW,EALpB;;AAAA;AAKLU,YAAAA,KALK;;AAAA,kBAOPD,SAAS,MAAMJ,KAPR;AAAA;AAAA;AAAA;;AAQPM,YAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyCP,KAAzC;AARO;AAAA,mBASD,yBAAW,OAAX,EAAoBA,KAApB,CATC;;AAAA;AAAA,kBAYPI,SAAS,MAAML,QAZR;AAAA;AAAA;AAAA;;AAaPO,YAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CR,QAA5C;AAbO;AAAA,mBAcD,yBAAW,UAAX,EAAuBA,QAAvB,CAdC;;AAAA;AAAA,kBAiBPK,SAAS,MAAMH,WAjBR;AAAA;AAAA;AAAA;;AAkBDO,YAAAA,iBAlBC,GAkBmB,2BAAaX,OAAb,CAlBnB;AAmBPS,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAd,EAA4B;AAAEC,cAAAA,iBAAiB,EAAjBA;AAAF,aAA5B;AAnBO;AAAA;AAAA;AAAA;AAAA,wBAoBYA,iBApBZ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBIC,YAAAA,IApBJ;;AAAA,kBAqBCL,SAAS,MAAMK,IArBhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAsBO,yBAAW,UAAX,EAAuBA,IAAvB,CAtBP;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA2BX,gBAAIL,SAAS,EAAb,EAAiB;AACbH,cAAAA,WAAW,GACLI,KAAK,CAACK,iBAAN,CAAwBb,OAAxB,EAAiCK,KAAjC,EAAwCC,QAAxC,CADK,GAELE,KAAK,CAACM,gBAAN,CAAuBd,OAAvB,EAAgCK,KAAhC,EAAuCC,QAAvC,CAFN;AAGH;;AA/BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import loadModule from './loadModule';\nimport getLanguages from './getLanguages';\n\nconst importPrism = () =>\n    import(/* webpackChunkName: 'codeblock/prismjs' */ 'prismjs');\n\n/**\n * Async function that loads and applies prism. See `hooks/usePrism`.\n */\n\nexport default async function applyPrism(element, options) {\n    //\n    const { language, theme, isContainer, async, callback } = options;\n\n    const isMounted = () => !!element;\n    const Prism = await importPrism();\n\n    if (isMounted() && theme) {\n        console.debug('[applyPrism] load theme', theme);\n        await loadModule('theme', theme);\n    }\n\n    if (isMounted() && language) {\n        console.debug('[applyPrism] load language', language);\n        await loadModule('language', language);\n    }\n\n    if (isMounted() && isContainer) {\n        const detectedLanguages = getLanguages(element);\n        console.debug('applyPrism', { detectedLanguages });\n        for (const lang of detectedLanguages) {\n            if (isMounted() && lang) {\n                await loadModule('language', lang);\n            }\n        }\n    }\n\n    if (isMounted()) {\n        isContainer\n            ? Prism.highlightAllUnder(element, async, callback)\n            : Prism.highlightElement(element, async, callback);\n    }\n}\n"],"file":"applyPrism.js"}