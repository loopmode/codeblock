{"version":3,"sources":["../../src/utils/loadModule.js"],"names":["loaders","theme","themes","language","languages","loadModule","type","name","loader","console","debug","error","warn","supported","Object","keys"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAEC,eADK;AAEZC,EAAAA,QAAQ,EAAEC;AAFE,CAAhB;AAKA;;;;;;;SAM8BC,U;;;;;;;0BAAf,iBAA0BC,IAA1B,EAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,MADK,GACIR,OAAO,CAACM,IAAD,CAAP,IAAiBN,OAAO,CAACM,IAAD,CAAP,CAAcC,IAAd,CADrB;AAGXE,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAd,EAA4B;AAAEJ,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,IAAI,EAAJA,IAAR;AAAcC,cAAAA,MAAM,EAANA;AAAd,aAA5B;;AAHW,kBAKP,OAAOA,MAAP,KAAkB,UALX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAOGA,MAAM,EAPT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASHC,YAAAA,OAAO,CAACE,KAAR,sCACkCL,IADlC,gBAC2CC,IAD3C;;AATG;AAAA;AAAA;;AAAA;AAePE,YAAAA,OAAO,CAACG,IAAR,uBAA4BN,IAA5B,gBAAqCC,IAArC,SAA8C;AAC1CM,cAAAA,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYf,OAAO,CAACM,IAAD,CAAnB;AAD+B,aAA9C;;AAfO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import themes from '../themes';\nimport languages from '../languages';\n\nconst loaders = {\n    theme: themes,\n    language: languages\n};\n\n/**\n * Loads a prismjs theme or language module.\n *\n * @param {String} type either `theme` or `language`\n * @param {String} name the name of the theme or language to load\n */\nexport default async function loadModule(type, name) {\n    const loader = loaders[type] && loaders[type][name];\n\n    console.debug('loadModule', { type, name, loader });\n\n    if (typeof loader === 'function') {\n        try {\n            await loader();\n        } catch (error) {\n            console.error(\n                `[loadModule] error loading ${type} \"${name}\"`,\n                error\n            );\n        }\n    } else {\n        console.warn(`Unsupported ${type} \"${name}\"`, {\n            supported: Object.keys(loaders[type])\n        });\n    }\n}\n"],"file":"loadModule.js"}